#
# My theme updated to use vcs_info and git-info for remote details.
# Mechanichs mostly forked from sorian's and steeef's prompts but stylized
# using the same prompt I've been using for years.
#
# Authors:
#   Ben Doerr <craftsman@bendoerr.me>
#

# Load dependencies.
pmodload 'helper'

function prompt_bdoerr_git_info {
  if (( _prompt_bdoerr_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_bdoerr_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_bdoerr_precmd_async_data"
      PROMPT="
${_prompt_bdoerr_color_user}%n%f%b in ${_prompt_bdoerr_color_dir}%~%f%b "'${vcs_info_msg_0_}'" "'$git_info[prompt]'"
› "
      unalias typeset
    fi

    # Reset PID.
    _prompt_bdoerr_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_bdoerr_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_bdoerr_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_bdoerr_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  # Check for untracked files or updated submodules since vcs_info does not.
  if [[ -n $(git ls-files --other --exclude-standard 2> /dev/null) ]]; then
    branch_format="on ${_prompt_bdoerr_color_vcs_branch}%c%u%b$reset_color %F{magenta}✗%f"
  else
    branch_format="on ${_prompt_bdoerr_color_vcs_branch}%c%u%b$reset_color"
  fi

  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"

  vcs_info 'prompt'

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_bdoerr_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_bdoerr_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_bdoerr_git_info WINCH
  prompt_bdoerr_precmd_async &!
  _prompt_bdoerr_precmd_async_pid=$!
}

function prompt_bdoerr_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook
  autoload -Uz vcs_info
  autoload -U colors && colors

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_bdoerr_precmd

  _prompt_bdoerr_color_user="$fg_bold[yellow]"
  _prompt_bdoerr_color_dir="$fg_bold[cyan]"
  _prompt_bdoerr_color_vcs_branch="$fg_bold[green]"

  _prompt_bdoerr_precmd_async_pid=0
  _prompt_bdoerr_precmd_async_data="${TMPPREFIX}-prompt_bdoerr_data"

  # Formats:
  #   %b - branchname
  #   %u - unstagedstr (see below)
  #   %c - stagedstr (see below)
  #   %a - action (e.g. rebase-i)
  #   %R - repository path
  #   %S - path in the repository
  local branch_format="on ${_prompt_bdoerr_color_vcs_branch}%c%u%b$reset_color"
  local action_format="($fg[yellow]%a%f%k)"
  local unstaged_format="$reset_color$fg_bold[red]"
  local staged_format="$reset_color%F{green}"

  # Set vcs_info parameters.
  zstyle ':vcs_info:*' enable bzr git hg svn
  zstyle ':vcs_info:*:prompt:*' check-for-changes true
  zstyle ':vcs_info:*:prompt:*' unstagedstr "${unstaged_format}"
  zstyle ':vcs_info:*:prompt:*' stagedstr "${staged_format}"
  zstyle ':vcs_info:*:prompt:*' actionformats "${branch_format} ${action_format}"
  zstyle ':vcs_info:*:prompt:*' formats "${branch_format}"
  zstyle ':vcs_info:*:prompt:*' nvcsformats   ""

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'
  zstyle ':prezto:module:git:info:ahead' format "with $fg_bold[magenta]unpushed$reset_color"
  zstyle ':prezto:module:git:info:behind' format "with $fg[magenta]unpulled$reset_color"
  zstyle ':prezto:module:git:info:keys' format 'prompt' '%A%B'

  # Define prompts, redefined in "function prompt_bdoerr_git_info"
  PROMPT="
${_prompt_bdoerr_color_user}%n%f%b in ${_prompt_bdoerr_color_dir}%~%f%b "'${vcs_info_msg_0_}'"
› "
  RPROMPT=''
}

prompt_bdoerr_setup "$@"
